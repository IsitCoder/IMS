@model IMS.Models.Product

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Product</h4>
    <hr />
    <dl class="row">
        @{
            if (Model.ProductImageUrl != null)
            {
                byte[] byteImage = Model.ProductImageUrl;
                string imgBase64 = Convert.ToBase64String(byteImage);
                string imgDataURL = string.Format("data:image/png;base64,{0}", imgBase64);

                <dt class="col-sm-10">
                        <img src="@imgDataURL" Class="card-img-top" alt="..." class="avatar-img rounded-circle">
                </dt>

            }
            else
            {
                <dt class="col-sm-10">
                    <img src="Image/Product.png" Class="card-img-top" alt="..." class="avatar-img rounded-circle">        
                </dt>
            }
        }
        <dd class="col-sm-10">
            <br />
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductCode)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductCode)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Barcode)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Barcode)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CurrentQuantity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CurrentQuantity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DefaultBuyingPrice)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DefaultBuyingPrice)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DefaultSellingPrice)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DefaultSellingPrice)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.BranchId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.BranchId)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>
        <dd class="col-sm-10">
            @(Model.IsActive ? "Active" : "Unactive")
        </dd>

    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.ProductId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
